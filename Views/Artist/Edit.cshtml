@model BigHitEntatinment.Models.ArtistViewModel
@using System.Threading;
@{
    ViewBag.Title = "Edit";
}

<h2>아티스트 정보 수정</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Html.DisplayFor(model => model.Name)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @maxlength = "100" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DebutDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DebutDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control datecontrol", @Value = Model.DebutDate.Date.ToShortDateString(), @type = "date", @placeholder = "yyyy-mm-dd", @name = "DebutDate"@*, @data_bind = "datepicker: DebutDate"*@ } })
                @Html.ValidationMessageFor(model => model.DebutDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", data_bind = "value:Description, valueUpdate:'input'", @maxlength = "2000" } })
                <span style="color: #999;" data-bind="text:charactersRemaining"></span><span style="color: #999; font-size: medium"> 자 남음</span>
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="admin-tooltip">
                    <input type="submit" value="Save" class="btn btn-outline-danger" disabled="disabled" title="Save" />
                    <span class="admin-tooltiptext">관리자 로그인 필요</span>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "", htmlAttributes: new { @class = "btn btn-light btn-sm" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval"
                    , "~/Scripts/knockout-3.4.2.js")
    <script>
        //
        function editViewModel() {
            var self = this;
            self.Description = ko.observable($("#Description").val());
            self.charactersRemaining = ko.computed(function () {
                return 2000 - self.Description().length;
            });
            self.DebutDate = ko.observable($("#DebutDate").val());
        }
        //
        ko.applyBindings(new editViewModel());
    </script>

    <script>
        //ko.bindingHandlers.datepicker = {
        //    init: function (element, valueAccessor, allBindingsAccessor) {
        //        var options = allBindingsAccessor().datepickerOptions || {};
        //        $(element).datepicker(options);

        //        ko.utils.registerEventHandler(element, "change", function () {
        //            var observable = valueAccessor();
        //            var newDate = $(element).datepicker("getDate");
        //            observable(moment(newDate).format('MM/DD/YYYY'));
        //        });

        //        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {
        //            $(element).datepicker("destroy");
        //        });

        //    },
        //    update: function (element, valueAccessor) {
        //        var value = ko.utils.unwrapObservable(valueAccessor());
        //        var date = moment(value);
        //        current = $(element).datepicker("getDate");

        //        if (value != null) {
        //            if (value - current !== 0) {
        //                date = moment(value);
        //                $(element).val(date.format("DD-MM-YYYY"));
        //            }
        //        }
        //    }
        //};
    </script>

    <script>
        //IE, Crome 은 날짜 2018/11/31 체크 안됨
        $(function () {
            $(".datecontrol").datepicker({
                dateFormat: "yyyy-MM-dd"
                , showOn : "both"
            });
        });
    </script>
}
